package templates

import (
	"fmt"
	"github.com/orestiskosko/hours-app/models"
)

templ TrackerPage(model models.TrackerViewModel) {
	if IsHxRequest(ctx) {
		@Navigation("/tracker")
	}
	<div class="flex flex-col flex-1 gap-12">
		<div class="flex flex-row justify-between items-center">
			<h1 class="text-2xl font-semibold">Tracker</h1>
		</div>
		<div class="flex flex-col gap-8">
			<div id="tracker_main_container">
				if model.IsRunning {
					@StartTimerResponse(model.RunningTaskEntry)
				} else {
					@TaskEntrySetup(model.ProjectOptions)
				}
			</div>
			@TaskEntries(model.TaskEntries)
		</div>
	</div>
}

templ TaskEntries(taskEntries []models.TaskEntryViewModel) {
	<div id="task_entries_container" class="flex flex-col gap-2 max-h-full">
		for _, taskEntry := range taskEntries {
			@TaskEntryCard(taskEntry)
		}
	</div>
}

templ TaskEntrySetup(projects map[string]string) {
	<form
		hx-boost="true"
		hx-post="/tracker/start"
		hx-target="#tracker_main_container"
		hx-swap="innerHTML"
		x-data="{ projectId: '', taskId: '', date: new Date()}"
		class="border border-gray-400 bg-white p-8 rounded-md flex flex-col gap-8"
	>
		<div class="flex justify-between items-center">
			<div class="text-xl font-semibold">Pick your next task</div>
			@DatePicker()
		</div>
		<div class="flex flex-col gap-2">
			<label for="projects" class="text-md font-medium text-gray-900">
				Project
			</label>
			<select
				hx-get="/tracker/tasks-select"
				hx-trigger="change"
				hx-target="#tasks_select"
				hx-swap="innerHTML"
				x-model="projectId"
				id="projects"
				name="project_id"
				required
				class="h-12 px-4 border border-gray-300 rounded-md"
			>
				<option disabled selected value></option>
				for projectID, projectName := range projects {
					<option value={ projectID }>{ projectName }</option>
				}
			</select>
		</div>
		<div id="tasks" class="flex flex-col gap-2">
			<label for="task_id" class="text-md font-medium text-gray-900">
				Task
			</label>
			<select
				x-model="taskId"
				id="tasks_select"
				name="task_id"
				required
				class="h-12 px-4 border border-gray-300 rounded-md"
			></select>
		</div>
		<div class="flex justify-start gap-4">
			<button
				type="submit"
				disabled
				:disabled="!taskId"
				class="px-6 py-2 bg-green-600 text-white rounded-md disabled:bg-gray-300 disabled:text-gray-900"
			>
				Start
			</button>
		</div>
	</form>
}

templ StartTimerResponse(taskEntry models.TaskEntryViewModel) {
	<form
		hx-boost="true"
		hx-post="/tracker/stop"
		hx-target="#tracker_main_container"
		hx-swap="innerHTML"
		x-data={ fmt.Sprintf(`tracker("%s")`, taskEntry.StartedAt) }
		class="border border-gray-400 bg-white p-8 rounded-md flex flex-col md:flex-row justify-between items-center"
	>
		<div class="basis-1/4">
			<div x-text="date.toDateString()" class="text-lg font-semibold text-gray-900"></div>
			<div class="text-lg text-gray-900">{ taskEntry.ProjectName }</div>
			<div class="text-lg text-gray-900">{ taskEntry.TaskName }</div>
		</div>
		<p x-text="getTimerDisplay" class="text-gray-900 text-5xl"></p>
		<button
			type="submit"
			class="basis-1/4 px-6 py-2 text-gray-50 rounded-lg bg-red-600"
		>
			Stop
		</button>
		<input
			id="task_entry_id"
			name="task_entry_id"
			value={ fmt.Sprintf("%d", taskEntry.ID) }
			type="hidden"
		/>
	</form>
}

templ StopTimerResponse(projects map[string]string, taskEntry models.TaskEntryViewModel) {
	@TaskEntrySetup(projects)
	<div id="task_entries_container" hx-swap-oob="beforeend">
		@TaskEntryCard(taskEntry)
	</div>
}

templ TaskEntryCard(taskEntry models.TaskEntryViewModel) {
	<div class="flex justify-between items-center p-4 bg-white border border-gray-400 rounded-md">
		<div class="flex gap-4">
			<span>{ taskEntry.ProjectName } - { taskEntry.TaskName }</span>
		</div>
		<div class="flex gap-4">
			<div class="text-lg text-gray-900">{ taskEntry.Duration }</div>
		</div>
	</div>
}

templ TaskOptions(tasks map[string]string) {
	if len(tasks) > 0 {
		<option disabled selected value></option>
		for taskID, taskName := range tasks {
			<option value={ taskID }>{ taskName }</option>
		}
	}
}

templ DatePicker() {
	<div
		hx-get="/tracker/entries"
		hx-trigger="fetchTaskEntries"
		hx-include="find input[name=date]"
		hx-target="#task_entries_container"
		hx-swap="innerHTML"
		class="flex items-center gap-2"
	>
		<button type="button" title="Previous Day" @click="date = date.addDays(-1); $dispatch('fetchTaskEntries', { date: date })">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 h-10 p-2 rounded-md text-gray-900 hover:bg-gray-200">
				<path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5"></path>
			</svg>
		</button>
		<div x-text="date.toDateString()" class="text-xl text-gray-900"></div>
		<button type="button" title="Next Day" @click="date = date.addDays(1); $dispatch('fetchTaskEntries')">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 h-10 p-2 rounded-md text-gray-900 hover:bg-gray-200">
				<path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5"></path>
			</svg>
		</button>
		<button type="button" title="Today" @click="date = new Date(); $dispatch('fetchTaskEntries')">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 h-10 p-2 rounded-md text-gray-900 hover:bg-gray-200">
				<path stroke-linecap="round" stroke-linejoin="round" d="m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"></path>
			</svg>
		</button>
		<span class="relative w-10 h-10 p-2 text-gray-900 rounded-md hover:bg-gray-200">
			<span class="absolute top-0 left-0 w-full h-full p-2">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"></path>
				</svg>
			</span>
			<input
				name="date"
				type="date"
				title="Pick Date"
				class="datepicker-input"
				@change="date = $event.target.valueAsDate"
				x-model="date.toISOString().split('T')[0]"
			/>
		</span>
	</div>
}
